server {
    listen 443 ssl;
    server_name ${NGINX_HOST};
    ssl_certificate /certificates/nginx/fullchain.pem;
    ssl_certificate_key /certificates/nginx/privkey.pem;

    location / {
        proxy_pass http://payload:3000;

        add_header X-Cache $upstream_cache_status;
        
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;

        proxy_cache_key $uri$is_args$args;
        proxy_cache vector_cache;
        proxy_cache_valid 200 302 10m;
        proxy_cache_valid 404 1m;
        proxy_cache_valid any 1m;
        proxy_cache_revalidate on;
        proxy_cache_use_stale error timeout updating;
    }

    # Doing this in both ways to avoid a redirect loop
    location /admin {
        proxy_pass http://payload:3000/admin;
    }

    location /admin/ {
        proxy_pass http://payload:3000/admin/;
    }
}

# Using a different server to not expose the purge function to the outside
# and only make it accessible from within the payload service
server {
    listen 1810;

    location ~ ^/purge(/.*) {
        auth_request /auth;
        proxy_cache_purge vector_cache $1$is_args$args;
    }
    
    location = /auth {
        internal;
        proxy_pass http://payload:3000/auth;
        proxy_pass_request_body  off;
        proxy_set_header Content-Length "";
        proxy_set_header X-Original-URI $request_uri;
    }
}