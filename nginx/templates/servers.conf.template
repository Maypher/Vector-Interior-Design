server {
    listen 443;
    server_name ${NGINX_HOST};

    location / {
        add_header X-Cache $upstream_cache_status;
        
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;

        client_max_body_size 15M;

        proxy_cache_key $uri$is_args$args;
        proxy_cache vector_cache;
        proxy_cache_valid 200 302 10m;
        proxy_cache_valid 404 1m;
        proxy_cache_valid any 1m;
        proxy_cache_revalidate on;
        proxy_cache_use_stale error timeout updating;
    
        proxy_cache_bypass $http_pragma $http_cache_control;

        proxy_pass http://payload:3000;
    }

    # Doing this in both ways to avoid a redirect loop
    location /admin {
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;

        proxy_pass http://payload:3000/admin;
    }

    location /admin/ {
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;

        proxy_pass http://payload:3000/admin/;
    }
}

# Using a different server to not expose the purge function to the outside
# and only make it accessible from within the payload service
server {
    listen 1810;

    location ~ ^/purge(/.*) {
        proxy_cache_purge vector_cache $1$is_args$args;
    }
}