map $DEV_MODE $is_dev {
    default 0;
    "1" 1;
}

map $host $backend {
    ${ADMIN_FRONTEND_URL} http://admin-backend;
    default http://user-backend;
}

ssl_certificate     /etc/nginx/certs/dev.crt;
ssl_certificate_key /etc/nginx/certs/dev.key;
ssl_verify_client off;

lua_package_path "/lua/?.lua;;";


server {
    # Backend in production
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name ${BACKEND_URL} www.${BACKEND_URL};

    resolver 127.0.0.11 valid=30s;
    include ./includes/server_down.conf;
    error_page 520 ./502.html;

    location / {
        # Add some leeway for image uploads
        client_max_body_size 10M;
        
        proxy_pass $backend;
        proxy_set_header Host $host; # Important: Forward the original host
        proxy_set_header X-Real-IP $remote_addr; # Forward real IP
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # Forward headers
        proxy_set_header X-Forwarded-Proto $scheme; # Forward protocol
    }

    location ~* ^/images/(.*)\.(jpg|jpeg|png)$ {
        set $filename $1;
        set $extension $2;
        set $image_filename "${filename}.${extension}";

        content_by_lua_block {
            require("app").optimize_image()
        }
    }
}

server {
    # Admin frontend in production
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name ${ADMIN_FRONTEND_URL} www.${ADMIN_FRONTEND_URL};


    resolver 127.0.0.11 valid=30s;
    include ./includes/server_down.conf;
    error_page 520 ./502.html;

    location / {
        # Doing this to make nginx not crash if a server is down and instead return a 502
        set $upstream admin-backend;
        proxy_pass http://$upstream;
        proxy_set_header Host $host; # Important: Forward the original host
        proxy_set_header X-Real-IP $remote_addr; # Forward real IP
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # Forward headers
        proxy_set_header X-Forwarded-Proto $scheme; # Forward protocol
    }
}

server {
    # User frontend in production
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name ${USER_FRONTEND_URL} www.${USER_FRONTEND_URL};

    resolver 127.0.0.11 valid=30s;
    include ./includes/server_down.conf;
    error_page 520 ./502.html;

    location / {
        set $upstream user-frontend;
        proxy_pass http://$upstream;
        proxy_set_header Host $host; # Important: Forward the original host
        proxy_set_header X-Real-IP $remote_addr; # Forward real IP
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # Forward headers
        proxy_set_header X-Forwarded-Proto $scheme; # Forward protocol
    }
}

server {
    # Admin frontend for development
    listen 5173 ssl;
    listen [::]:5173 ssl;
    server_name _;

    resolver 127.0.0.11 valid=30s;
    include ./includes/server_down.conf;
    error_page 520 ./502.html;

    location / {
        if ($is_dev = 0) {
            return 403;
        }
       
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://admin-frontend;
    }
}

server {
    # Admin backend web socket for hmr in development
    listen 5111 ssl;

    resolver 127.0.0.11 valid=30s;
    include ./includes/server_down.conf;
    error_page 520 ./502.html;

    if ($is_dev = 0) {
        return 403;
    }

    location / {
        proxy_pass http://admin-frontend;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

server {
    # User frontend in development
    listen 5174 ssl;
    listen [::]:5174 ssl;
    server_name _;

    resolver 127.0.0.11 valid=30s;
    include ./includes/server_down.conf;
    error_page 520 ./502.html;

    location / {
        if ($is_dev = 0) {
            return 403;
        }
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://user-frontend;
    }
}

server {
    # Admin frontend web socket for hmr in development
    listen 5112 ssl;

    resolver 127.0.0.11 valid=30s;
    include ./includes/server_down.conf;
    error_page 520 ./502.html;

    if ($is_dev = 0) {
        return 403;
    }

    location / {
        proxy_pass http://user-frontend;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

server {
    # Admin backend in development
    listen 8080 ssl;
    listen [::]:8080 ssl;
    server_name _;
    client_max_body_size 10M;

    resolver 127.0.0.11 valid=30s;
    include ./includes/server_down.conf;
    error_page 520 ./502.html;

    location / {
        if ($is_dev = 0) {
            return 403;
        }

        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://admin-backend;
    }

    location ~* ^/images/(.*)\.(jpg|jpeg|png)$ {
        root /storage/;
    }
}

server {
    # Redirect all traffic to https
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name _;

    resolver 127.0.0.11 valid=30s;
    include ./includes/server_down.conf;
    error_page 520 ./502.html;

    return 301 https://$host$request_uri;
}
