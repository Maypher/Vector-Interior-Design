map $DEV_MODE $is_dev {
    default 0;
    "1" 1;
}

lua_package_path "/lua/?.lua;;";

upstream admin-proxy-frontend {
    server admin-frontend:3000;
}

upstream admin-proxy-backend {
    server admin-backend;
}

upstream proxy-frontend {
    server user-frontend:3000;
}

upstream proxy-backend {
    server user-backend;
}

server {
    # Admin frontend and backend in production
    listen 80;
    listen [::]:80;
    server_name ${ADMIN_URL};

    resolver 127.0.0.11 valid=30s;
    include ./includes/server_down.conf;
    error_page 502 /502.html;

    location / {
        proxy_pass http://admin-proxy-frontend/;
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        
        proxy_set_header Forwarded "for=$remote_addr; proto=$scheme; secret=${NGINX_SECRET}";
        proxy_set_header Host $host; # Important: Forward the original host
        proxy_set_header X-Real-IP $remote_addr; # Forward real IP
    }

    location ${ADMIN_API_PATH} {
        client_max_body_size 10M;
        proxy_pass http://admin-proxy-backend/;
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        
        proxy_set_header Forwarded "for=$remote_addr; proto=$scheme; secret=${NGINX_SECRET}";
        proxy_set_header Host $host; # Important: Forward the original host
        proxy_set_header X-Real-IP $remote_addr; # Forward real IP 
    }

    location ~* ^/images/(.*)\.(jpg|jpeg|png)$ {
        set $filename $1;
        set $extension $2;
        set $image_filename "${filename}.${extension}";

        content_by_lua_block {
            require("app").optimize_image()
        }
    }
}

server {
    # User frontend and backend in production
    listen 80;
    listen [::]:80;
    server_name ${USER_URL} www.${USER_URL};

    resolver 127.0.0.11 valid=30s;
    include ./includes/server_down.conf;
    error_page 502 /502.html;

    location / {
        access_log /var/nginx/logs/access.log;
        proxy_pass http://proxy-frontend;
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;

        proxy_set_header Host $host; # Important: Forward the original host
        proxy_set_header X-Real-IP $remote_addr; # Forward real IP
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # Forward headers
        proxy_set_header X-Forwarded-Proto $scheme; # Forward protocol
    }

    location ${USER_API_PATH} {
        proxy_pass http://proxy-backend/;
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;

        proxy_set_header Host $host; # Important: Forward the original host
        proxy_set_header X-Real-IP $remote_addr; # Forward real IP
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # Forward headers
        proxy_set_header X-Forwarded-Proto $scheme; # Forward protocol
    }

    location ~* ^/images/(.*)\.(jpg|jpeg|png)$ {
        set $filename $1;
        set $extension $2;
        set $image_filename "${filename}.${extension}";

        content_by_lua_block {
            require("app").optimize_image()
        }
    }
}

server {
    # Admin frontend for development
    listen 5173;
    listen [::]:5173;
    server_name _;

    resolver 127.0.0.11 valid=30s;
    include ./includes/server_down.conf;
    error_page 502 ./502.html;

    location / {
        if ($is_dev = 0) {
            return 403;
        }
       
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://admin-proxy-frontend/;
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
    }

    location ${ADMIN_API_PATH} {
        client_max_body_size 10M;
        proxy_pass http://admin-proxy-backend/;
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;

        proxy_set_header Host $host; # Important: Forward the original host
        proxy_set_header X-Real-IP $remote_addr; # Forward real IP
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # Forward headers
        proxy_set_header X-Forwarded-Proto $scheme; # Forward protocol
    }

    location ~* ^/images/(.*)\.(jpg|jpeg|png)$ {
        set $filename $1;
        set $extension $2;
        set $image_filename "${filename}.${extension}";

        content_by_lua_block {
            require("app").optimize_image()
        }
    }
}

server {
    # Admin web socket for hmr in development
    listen 5111;

    resolver 127.0.0.11 valid=30s;
    include ./includes/server_down.conf;
    error_page 502 ./502.html;

    if ($is_dev = 0) {
        return 403;
    }

    location / {
        proxy_pass http://admin-proxy-frontend/;
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location ${ADMIN_API_PATH} {
        proxy_pass http://admin-proxy-backend/;
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;

        proxy_set_header Host $host; # Important: Forward the original host
        proxy_set_header X-Real-IP $remote_addr; # Forward real IP
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # Forward headers
        proxy_set_header X-Forwarded-Proto $scheme; # Forward protocol
    }

    location ~* ^/images/(.*)\.(jpg|jpeg|png)$ {
        set $filename $1;
        set $extension $2;
        set $image_filename "${filename}.${extension}";

        content_by_lua_block {
            require("app").optimize_image()
        }
    }
}

server {
    # User frontend in development
    listen 5174;
    listen [::]:5174;
    server_name _;

    resolver 127.0.0.11 valid=30s;
    include ./includes/server_down.conf;
    error_page 502 ./502.html;

    location / {
        if ($is_dev = 0) {
            return 403;
        }
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://proxy-frontend/;
    }

    location ${USER_API_PATH} {
        proxy_pass http://proxy-backend/;
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;

        proxy_set_header Host $host; # Important: Forward the original host
        proxy_set_header X-Real-IP $remote_addr; # Forward real IP
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # Forward headers
        proxy_set_header X-Forwarded-Proto $scheme; # Forward protocol
    }

    location ~* ^/images/(.*)\.(jpg|jpeg|png)$ {
        set $filename $1;
        set $extension $2;
        set $image_filename "${filename}.${extension}";

        content_by_lua_block {
            require("app").optimize_image()
        }
    }
}

server {
    # User frontend web socket for hmr in development
    listen 5112;

    resolver 127.0.0.11 valid=30s;
    include ./includes/server_down.conf;
    error_page 502 ./502.html;

    if ($is_dev = 0) {
        return 403;
    }

    location / {
        proxy_pass http://proxy-frontend/;
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location ${USER_API_PATH} {
        proxy_pass http://proxy-backend/;
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;

        proxy_set_header Host $host; # Important: Forward the original host
        proxy_set_header X-Real-IP $remote_addr; # Forward real IP
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # Forward headers
        proxy_set_header X-Forwarded-Proto $scheme; # Forward protocol
    }

    location ~* ^/images/(.*)\.(jpg|jpeg|png)$ {
        set $filename $1;
        set $extension $2;
        set $image_filename "${filename}.${extension}";

        content_by_lua_block {
            require("app").optimize_image()
        }
    }
}
