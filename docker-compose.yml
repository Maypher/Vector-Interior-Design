name: TQportfolio

services:
    admin-backend:
        build:
            context: ./backend/
            dockerfile: ./admin/Dockerfile
        environment:
            - PORT=${ADMIN_PORT}
            - HOST=database
            - USERNAME=${ADMIN_USERNAME}
            - PASSWORD=${ADMIN_PASSWORD}
            - DB_PORT=${DATABASE_PORT}
            - DB_NAME=${DATABASE_NAME}
            - SECRET_KEY=${ADMIN_SERVER_SECRET_KEY}
            - COMMON_PORT=${USER_PORT}
            - COMMON_SECRET_KEY=${USER_SERVER_SECRET_KEY}
            - COMMON_USERNAME=${USER_USERNAME}
            - COMMON_PASSWORD=${USER_PASSWORD}
            - COMMON_HOST=database
            - COMMON_DB_PORT=${DATABASE_PORT}
            - COMMON_DB_NAME=${DATABASE_NAME}
        volumes:
            - data:/storage/images/
        networks:
            - admin
            - backend
        depends_on:
            database:
                condition: service_healthy
                restart: true
        develop:
            watch:
                - action: sync
                  path: ./backend/admin/src/
                  target: /app/src/
        restart: on-failure
    user-backend:
        build:
            context: ./backend/
            dockerfile: ./user/Dockerfile
        volumes:
            - data:/storage/images/
        networks:
            user:
            backend:
        depends_on:
            database:
                condition: service_healthy
                restart: true
        develop:
            watch:
                - action: sync
                  path: ./backend/user/src/
                  target: /app/src/
        environment:
            - PORT=${USER_PORT}
            - SECRET_KEY=${USER_SERVER_SECRET_KEY}
            - USERNAME=${USER_USERNAME}
            - PASSWORD=${USER_PASSWORD}
            - HOST=database
            - DB_PORT=${DATABASE_PORT}
            - DB_NAME=${DATABASE_NAME}
            - COMMON_PORT=${USER_PORT}
            - COMMON_SECRET_KEY=${USER_SERVER_SECRET_KEY}
            - COMMON_USERNAME=${USER_USERNAME}
            - COMMON_PASSWORD=${USER_PASSWORD}
            - COMMON_HOST=database
            - COMMON_DB_PORT=${DATABASE_PORT}
            - COMMON_DB_NAME=${DATABASE_NAME}
    database:
        build: ./database/
        restart: always
        env_file:
            - .env
        environment:
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            - POSTGRES_DB=${DATABASE_NAME}
            - ADMIN_USERNAME=${ADMIN_USERNAME}
            - ADMIN_PASSWORD=${ADMIN_PASSWORD}
            - USER_USERNAME=${USER_USERNAME}
            - USER_PASSWORD=${USER_PASSWORD}
            - PGPORT=${DATABASE_PORT}
            - PGUSER=postgres
            - LANG=es_ES.UTF-8
            - LANGUAGE=es_ES.UTF-8
            - LC_ALL=es_ES.UTF-8
        volumes:
            - data:/storage/database/
        networks:
            - backend
        healthcheck:
            test: [ "CMD-SHELL", "pg_isready", "-d", "postgres" ]
            interval: 1m30s
            timeout: 30s
            retries: 5
            start_period: 30s
    nginx:
        build: "./nginx/"
        ports:
            - "8080:80"
            - "8090:20"
        volumes:
            - data:/storage/images/:ro
        depends_on:
            - admin-backend
        networks:
            - backend
volumes:
    data:
networks:
    user:
    admin:
    backend:
